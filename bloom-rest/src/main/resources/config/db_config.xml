<?xml version="1.0" encoding="UTF-8"?>
<!--
 * @author Rono, Ankur Bhardwaj
 * @email arkoghosh @hotmail.com, meankur1@gmail.com
 * @Copyright
-->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.mana.innovative.dao,
    com.mana.innovative.dao.client,
    com.mana.innovative.dao.common,
    com.mana.innovative.dao.consumer,
    com.mana.innovative.domain.client,
    com.mana.innovative.domain.common,
    com.mana.innovative.domain.consumer"/>
    <!-- IMP taken from Spring XSD Schema
     	"ENVIRONMENT" indicates placeholders should be resolved against the current Environment and against any local properties;
     	"NEVER" indicates placeholders should be resolved only against local properties and never against system properties;
	    "FALLBACK" indicates placeholders should be resolved against any local properties and then against system properties;
	    "OVERRIDE" indicates placeholders should be resolved first against system properties and then against any local properties;
    -->
    <context:property-placeholder system-properties-mode="FALLBACK" ignore-unresolvable="true"

                                  location="classpath*:/properties/localProps.properties,classpath*:properties/dabaseLocal.Properties,classpath*:properties/hibernateLocal.properties"/>

    <!-- for direct prop file values "${propertyKey}" use double quotes as req-->
    <!-- for spring property class object "${beanId['propertyKey']} use double quotes as req spring SpEL exp evaluation"-->
    <!--<bean id="properties" class="${bloom-common.spring_property_class}">-->
    <!--<property name="ignoreResourceNotFound" value="true" />-->
    <!--<property name="propagateToSystemProperties" value="true"/>-->
    <!--<property name="locations">-->
    <!--<list>-->
    <!--<value>${bloom-dao.database1}</value>-->
    <!--<value>${bloom-dao.hibernate1}</value>-->
    <!--&lt;!&ndash;<value>${database}</value>&ndash;&gt;-->
    <!--&lt;!&ndash;<value>${hibernate}</value>&ndash;&gt;-->
    <!--</list>-->
    <!--</property>-->

    <!--</bean>-->

    <!--<bean id="dataSource" class="${bloom-dao.datasource_class}">-->
    <!--<property name="url" value="#{properties['dev.jdbc_url']}"/>-->
    <!--<property name="username" value="#{properties['dev.username']}"/>-->
    <!--<property name="password" value="#{properties['dev.password']}"/>-->
    <!--<property name="driverClassName" value="#{properties['dev.jdbc_driver']}"/>-->
    <!--</bean>-->
    <beans profile="prod">
        <jee:jndi-lookup id="dataSource" jndi-name="localDatabase"
                         expected-type="javax.sql.DataSource"/>
    </beans>
    <beans profile="dev">
        <bean id="dataSource" class="${bloom-dao.datasource_class}">
            <property name="url" value="${dev.jdbc_url}"/>
            <property name="username" value="${dev.username}"/>
            <property name="password" value="${dev.password}"/>
            <property name="driverClassName" value="${dev.jdbc_driver}"/>
            <property name="connectionProperties">
                <props>
                    <prop key="accessToUnderlyingConnectionAllowed">false</prop>
                    <prop key="defaultAutoCommit">true</prop>
                    <prop key="initialSize">0</prop>
                    <!--jtaManaged=true-->
                    <prop key="maxActive">20</prop>
                    <prop key="maxIdle">20</prop>
                    <prop key="maxOpenPreparedStatements">0</prop>
                    <prop key="maxWaitTime">-1 millisecond</prop>
                    <prop key="minEvictableIdleTime">30 minutes</prop>
                    <prop key="minIdle">0</prop>
                    <prop key="poolPreparedStatements">true</prop>
                    <prop key="timeBetweenEvictionRuns">-1 millisecond</prop>
                    <prop key="validationQuery">select 1</prop>
                </props>
            </property>
        </bean>
    </beans>

    <beans>
        <bean id="annotatedSessionFactory"
              class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

            <property name="packagesToScan">
                <list value-type="java.lang.String">
                    <value>com.mana.innovative.domain</value>
                </list>
            </property>
            <property name="dataSource" ref="dataSource"/>
            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                    <prop key="hibernate.c3p0.min_size">${hibernate.c3p0.min_size}</prop>
                    <prop key="hibernate.c3p0.max_size">${hibernate.c3p0.max_size}</prop>
                    <prop key="hibernate.c3p0.timeout">${hibernate.c3p0.timeout}</prop>
                    <prop key="hibernate.c3p0.max_statements">${hibernate.c3p0.max_statements}</prop>
                    <prop key="hibernate.c3p0.idle_test_period">${hibernate.c3p0.idle_test_period}</prop>

                    <!-- Show and print nice SQL on stdout -->
                    <prop key="show_sql">${hibernate.show_sql}</prop>
                    <prop key="format_sql">${hibernate.format_sql}</prop>
                    <prop key="use_sql_comments">${hibernate.use_sql_comments}</prop>
                    <prop key="hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                    <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/bloom</prop>
                    <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
                </props>
            </property>
        </bean>
        <tx:annotation-driven transaction-manager="transactionManager"/>
        <bean id="transactionManager" class="${bloom-dao.transaction_manager}">
            <property name="sessionFactory" ref="annotatedSessionFactory"/>
            <property name="nestedTransactionAllowed" value="true"/>
            <property name="dataSource" ref="dataSource"/>
        </bean>
    </beans>
    <!--<bean id="annotatedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->

    <!--<property name="packagesToScan">-->
    <!--<list value-type="java.lang.String">-->
    <!--<value>com.mana.innovative.domain</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="dataSource" ref="dataSource"/>-->
    <!--<property name="hibernateProperties">-->
    <!--<props>-->
    <!--<prop key="hibernate.dialect">#{properties['hibernate.dialect']}</prop>-->
    <!--<prop key="hibernate.c3p0.min_size">#{properties['hibernate.c3p0.min_size']}</prop>-->
    <!--<prop key="hibernate.c3p0.max_size">#{properties['hibernate.c3p0.max_size']}</prop>-->
    <!--<prop key="hibernate.c3p0.timeout">#{properties['hibernate.c3p0.timeout']}</prop>-->
    <!--<prop key="hibernate.c3p0.max_statements">#{properties['hibernate.c3p0.max_statements']}</prop>-->
    <!--<prop key="hibernate.c3p0.idle_test_period">#{properties['hibernate.c3p0.idle_test_period']}</prop>-->

    <!--&lt;!&ndash; Show and print nice SQL on stdout &ndash;&gt;-->
    <!--<prop key="show_sql">#{properties['hibernate.show_sql']}</prop>-->
    <!--<prop key="format_sql">#{properties['hibernate.format_sql']}</prop>-->
    <!--<prop key="use_sql_comments">#{properties['hibernate.use_sql_comments']}</prop>-->
    <!--<prop key="hbm2ddl.auto">#{properties['hibernate.hbm2ddl.auto']}</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; this is the aspect &ndash;&gt;-->
    <!--<bean id="profiler" class="com.mana.innovative.aop.SimpleProfiler">-->
    <!--&lt;!&ndash; execute before the transactional advice (hence the lower order number) &ndash;&gt;-->
    <!--<property name="order" value="1"/>-->
    <!--</bean>-->

    <!--<aop:config>-->
    <!--&lt;!&ndash; this advice will execute around the transactional advice &ndash;&gt;-->
    <!--<aop:aspect id="profilingAspect" ref="profiler">-->
    <!--<aop:pointcut id="serviceMethodWithReturnValue"-->
    <!--expression="execution(!void x.y..*Service.*(..))"/>-->
    <!--<aop:around method="profile" pointcut-ref="serviceMethodWithReturnValue"/>-->
    <!--</aop:aspect>-->
    <!--</aop:config>-->

</beans>