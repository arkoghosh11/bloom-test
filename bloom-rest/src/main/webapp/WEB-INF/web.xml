<?xml version="1.0" encoding="UTF-8"?>
<!--
 * @author Rono, Ankur Bhardwaj
 * @email arkoghosh @hotmail.com, meankur1@gmail.com
 * @Copyright
-->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	         http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
    <display-name>Bloom</display-name>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <!--<listener> -->
    <!--<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class> -->
    <!--</listener> -->
    <context-param>
        <param-name>spring.profiles.default</param-name>
        <param-value>dev</param-value>
    </context-param>
    <!-- Note to be set from environment or JNDI -->
    <!--<context-param>-->
    <!--<param-name>spring.profiles.active</param-name>-->
    <!--<param-value>dev</param-value>-->
    <!--</context-param>-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:/web_config.xml
            classpath*:/config/db_config.xml
            classpath*:/config/service_config.xml
            <!-- Note disabled bottom config files as scheduler is tied to email
            and without the email secure properties file these config files
            will not load
            -->
            classpath*:/config/email-config.xml
            classpath*:/config/scheduler-config.xml
        </param-value>
    </context-param>
    <!--location for login credentials-->
    <context-param>
        <param-name>lService</param-name>
        <param-value>loginService</param-value>
    </context-param>
    <!--@Note listener classes by Spring to instantiate Spring Application Context -->

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>
            org.springframework.web.context.request.RequestContextListener
        </listener-class>
    </listener>
    <!--@Note Filter class for Authentication -->
    <filter>
        <filter-name>Login Filter</filter-name>
        <filter-class>com.mana.innovative.rest.filter.LoginFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Login Filter</filter-name>
        <servlet-name>Jersey REST Service</servlet-name>
        <url-pattern>/rest/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>Cache Filter</filter-name>
        <filter-class>com.mana.innovative.rest.filter.ResetCacheFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Cache Filter</filter-name>
        <servlet-name>Jersey REST Service</servlet-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!--@Note Interceptor class for Authentication todo implement it -->

    <!-- @Note Rest Web Services -->
    <servlet>
        <servlet-name>Jersey REST Service</servlet-name>
        <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
        <init-param>
            <!--<description>Tabs,Users</description>-->
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>com.mana.innovative.rest;</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Jersey REST Service</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <!-- @Note SOAP Web Services -->
    <!-- IMP for the moment not implementing soap, but for future simple Soap Configuration below-->
    <!--<servlet>-->
    <!--<servlet-name>WSSpring</servlet-name>-->
    <!--<servlet-class>com.sun.xml.ws.transport.http.servlet.WSSpringServlet</servlet-class>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
    <!--<servlet-name>WSSpring</servlet-name>-->
    <!--<url-pattern>/hello</url-pattern>-->
    <!--</servlet-mapping>-->

</web-app>